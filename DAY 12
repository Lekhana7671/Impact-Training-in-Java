//To check if it could become non-decreasing by modifying at most one element.
import java.util.*;
public class Main{
  public static void main(String args[]){
    Scanner sc=new Scanner(System.in);
    int n=sc.nextInt();
    int[] arr=new int[n];
    for(int i=0;i<n;i++){
      arr[i]=sc.nextInt();
    }
    
    boolean result=true;
    for(int i=0;i<n-1;i++){
      if(arr[i]>=arr[i+1]){
        result=false;
    }else{
      result=true;
    }
  }
  
  if(n==0){
    result=false;
  }
  
  System.out.println(result);
}
}

//Given a 0-indexed integer array nums, return true if it can be made strictly increasing after removing exactly one element, or false otherwise. If the array is already strictly increasing, return true.
import java.util.*;
public class Main{
  public static void main(String args[]){
    Scanner sc=new Scanner(System.in);
    int n=sc.nextInt();
    int[] arr=new int[n];
    for(int i=0;i<n;i++){
      arr[i]=sc.nextInt();
    }
    
    boolean result=true;
    for(int i=1;i<n-1;i++){
      if(arr[i-1] <= arr[i]){
        result=true;
    }else{
      result=false;
    }
  }
  
  System.out.println(result);
  
}
}

//Given an array arr[] of size N, the task is to find the maximum sum non-empty subsequence present in the given array
import java.util.*;
public class Main{
  public static void main(String[] args){
    Scanner sc = new Scanner(System.in);
    int n = sc.nextInt();
    int arr[] = new int[n];
    for(int i=0;i<n;i++){
      arr[i] = sc.nextInt();
    }
    int sum = 0; 
    for(int i=0;i<n;i++){
      if(arr[i]>0){
        sum+=arr[i];
      }
    }
    System.out.print(sum);
  }
}
